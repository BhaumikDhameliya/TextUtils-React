{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","defaultProps","about","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","toFixed","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","prototypes","PropTypes","string","isRequired","App","setMode","setAlert","message","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"0NAIe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UAEE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAmBJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACE,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,wCAcdV,EAAOW,aAAe,CAClBN,MAAO,iBACPO,MAAO,S,oBC1DI,SAASC,EAASZ,GAC7B,MAAwBa,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAiCA,OACI,qCACI,sBAAKd,UAAU,YAAYe,MAAO,CAACC,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAArE,UACI,6BAAKF,EAAMkB,UACX,qBAAKjB,UAAY,OAAjB,SACA,0BAAUA,UAAU,eAAekB,MAAOL,EAAMM,SAvBrC,SAACC,GAEpBN,EAAQM,EAAMC,OAAOH,QAqB6DH,MAAO,CAACO,gBAA6B,SAAbvB,EAAME,KAAc,UAAU,QAASe,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAAUI,GAAG,QAAQkB,KAAK,QAErM,wBAAQvB,UAAU,uBAAuBM,QAvC/B,WAGlBQ,EAAQD,EAAKW,eACbzB,EAAM0B,UAAU,yBAA0B,YAmClC,kCACA,wBAAQzB,UAAU,uBAAuBM,QAlC9B,WACnBQ,EAAQD,EAAKa,eACb3B,EAAM0B,UAAU,yBAA0B,YAgClC,kCACA,wBAAQzB,UAAU,uBAAuBM,QA/B5B,WACrBQ,EAAQ,IACRf,EAAM0B,UAAU,kBAAmB,YA6B3B,mBACA,wBAAQzB,UAAU,uBAAuBM,QAxBlC,WACf,IAAIO,EAAOc,SAASC,eAAe,SACnCf,EAAKgB,SACLC,UAAUC,UAAUC,UAAUnB,EAAKK,OACnCnB,EAAM0B,UAAU,sBAAuB,YAoB/B,kBACA,wBAAQzB,UAAU,uBAAuBM,QAnB3B,WACtB,IAAI2B,EAAUpB,EAAKqB,MAAM,QACzBpB,EAAQmB,EAAQE,KAAK,MACrBpC,EAAM0B,UAAU,+BAAgC,YAgBxC,oCAEA,sBAAKzB,UAAU,iBAAiBe,MAAO,CAACC,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAA1E,UACA,mDACA,8BAAIY,EAAKqB,MAAM,KAAKE,OAApB,cAAuCvB,EAAKuB,OAA5C,iBACA,+BAAK,KAAQvB,EAAKqB,MAAM,KAAKE,QAAQC,QAAQ,GAA7C,mBACA,yCACA,4BAAIxB,EAAKuB,OAAO,EAAEvB,EAAK,mECvDxB,SAASyB,EAAMvC,GAK1B,OACIA,EAAMwC,OAAS,sBAAKvC,UAAS,sBAAiBD,EAAMwC,MAAMnC,KAA7B,gCAAiEoC,KAAK,QAApF,UACf,iCANe,SAACC,GAChB,IAAMC,EAAQD,EAAKf,cACnB,OAAOgB,EAAMC,OAAO,GAAGnB,cAAekB,EAAME,MAAM,GAIzCC,CAAW9C,EAAMwC,MAAMnC,QADjB,KACmCL,EAAMwC,MAAMO,ODsDtEnC,EAASoC,WAAa,CAClB9B,QAAS+B,IAAUC,OAAOC,YAG9BvC,EAASF,aAAe,CACpBQ,QAAS,qBEJEkC,MAhDf,WAEE,MAAwBvC,mBAAS,SAAjC,mBAAOX,EAAP,KAAamD,EAAb,KACA,EAAyBxC,mBAAS,MAAlC,mBAAM2B,EAAN,KAAac,EAAb,KAEM5B,EAAY,SAAC6B,EAAQlD,GACzBiD,EAAS,CACPP,IAAIQ,EACJlD,KAAKA,IAEPmD,YAAW,WACTF,EAAS,QACT,OAcJ,OACE,qCAGE,cAACvD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMM,WAhBvB,WACP,SAAPN,GACDmD,EAAQ,SACRzB,SAAS6B,KAAKzC,MAAMO,gBAAgB,QACpCG,EAAU,8BAA+B,aAGzC2B,EAAQ,QACRzB,SAAS6B,KAAKzC,MAAMO,gBAAgB,UACpCG,EAAU,6BAA8B,eAQxC,cAACa,EAAD,CAAOC,MAAOA,IACd,qBAAKvC,UAAU,iBAAf,SAMI,cAACW,EAAD,CAAUc,UAAWA,EAAWR,QAAQ,kCAAkChB,KAAMA,UChD1FwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASC,eAAe,W","file":"static/js/main.a3b2e34a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from 'react'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">\r\n                  {props.about}\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"set title here\",\r\n    about: \"About\"\r\n}\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Uppercase was clicked.\");\r\n        // let newText = text.toUpperCase();\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"converted to uppercase\", \"success\")\r\n    }\r\n    const handleLowClick = () =>{\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"converted to lowercase\", \"success\")\r\n    }\r\n    const handleClearClick = () =>{\r\n        setText(\"\")\r\n        props.showAlert(\"textbox cleared\", \"success\")\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied to clipboard\", \"success\")\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"extra space has been removed\", \"success\")\r\n    }\r\n\r\n    // text = \"new text\"; //wrong way to change the state\r\n    // setText(\"new text\"); //correct way to change the state \r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h2>{props.heading}</h2>\r\n                <div className = \"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#16276b':'white', color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n            </div>\r\n                <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{(0.008 * text.split(\" \").length).toFixed(3)} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the textbox above to preview it here.\"}</p>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTextForm.prototypes = {\r\n    heading: PropTypes.string.isRequired\r\n}\r\n\r\nTextForm.defaultProps = {\r\n    heading: \"heading goes here\"\r\n}\r\n\r\n","import React from 'react'\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";j\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light') //state variable that shows mode\n  const[alert, setAlert] = useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500)\n  }\n  const toggleMode = () =>{\n    if(mode==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Dark mode has been disabled\", \"success\")\n    }\n    else{\n      setMode('dark');\n      document.body.style.backgroundColor='#16276b'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      {/* <Navbar /> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch>\n      <About/> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}